alias: 'Doors opened home alone'
initial_state: 'off'
trigger:
  - platform: state
    entity_id: group.my_exterior_doors
    to: 'on'
condition:
  condition: and
  conditions:
    - condition: state
      entity_id: input_boolean.person3_home
      state: 'on'
      for:
        minutes: 5
    - condition: state
      entity_id: input_boolean.person1_home
      state: 'off'
    - condition: state
      entity_id: input_boolean.person2_home
      state: 'off'
    - condition: or
      conditions:
      # Needs to be at least one media player on, otherwise we assume we're going out
      - condition: state
        entity_id: media_player.samsung_tv_remote
        state: 'on'
      - condition: state
        entity_id: device_tracker.livingroom_chromecast
        state: 'home'
      - condition: state
        entity_id: device_tracker.family_tv
        state: 'home'
      - condition: state
        entity_id: media_player.living_room
        state: 'playing'
      - condition: state
        entity_id: media_player.family_room
        state: 'playing'
action:
  - service: media_player.turn_on
    data:
      entity_id: 
      - media_player.cast_guest_bedroom_speaker
      - media_player.cast_living_room_speaker
      - media_player.cast_master_bedroom_speaker
      - media_player.cast_office_speaker
      - media_player.cast_kitchen_speaker
  - service: media_player.volume_set
    data:
      volume_level: 0.35
      entity_id: 
      - media_player.cast_guest_bedroom_speaker
      - media_player.cast_living_room_speaker
      - media_player.cast_master_bedroom_speaker
      - media_player.cast_office_speaker
      - media_player.cast_kitchen_speaker
  - service: tts.google_say
    entity_id: 
    - media_player.cast_guest_bedroom_speaker
    - media_player.cast_living_room_speaker
    - media_player.cast_master_bedroom_speaker
    - media_player.cast_office_speaker
    - media_player.cast_kitchen_speaker
    data_template:
      message: >
        The following doors were just opened:
        {%- for entity_id in states.group.my_exterior_doors.attributes.entity_id -%}
          {% set parts = entity_id.split('.') -%}
          {%- if states(entity_id) == 'on' %}
          {%- if loop.first %} {% elif loop.last %} and the {% else %}, the {% endif -%}{{ states[parts[0]][parts[1]].name }}{% endif -%}
        {%- endfor %}
  - service: notify.person3
    data_template:
      message: >
        The following doors were just opened:
        {%- for entity_id in states.group.my_exterior_doors.attributes.entity_id -%}
          {% set parts = entity_id.split('.') -%}
          {%- if states(entity_id) == 'on' %}
          {%- if loop.first %} {% elif loop.last %} and the {% else %}, the {% endif -%}{{ states[parts[0]][parts[1]].name }}{% endif -%}
        {%- endfor %}
  - delay: '00:00:30'
  - service: media_player.turn_off
    data:
      entity_id: 
      - media_player.cast_guest_bedroom_speaker
      - media_player.cast_living_room_speaker
      - media_player.cast_master_bedroom_speaker
      - media_player.cast_office_speaker
      - media_player.cast_kitchen_speaker
